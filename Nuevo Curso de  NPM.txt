5.
“name”: “npm-init” —> Podemos ponerle un nombre sin embargo toma por defecto el de la carpeta.

“version”: “1.0.0” —> Podemos cambiar segun el caso, dependiendo un cambio mayor o uno menor

“description”:"" —> Podemos hacer una breve descripcion del proyecto.

“entry point”: “(index.js)” —> Punto de entrada del proyecto.

“test command”: —> Podemos incluir los comandos para validar nuestro codigo.

“git repository”: —> Podemos incluir el repositorio para mantenerlo en la nube

“keywords”: [“javascript”, “angular”, “node”] —> Que va a utilizar nuestro proyecto.

“author”: "Alexa Pulido<pulidoaleXXXXXXX> —> Persona que crea el proyecto

“license”: “MIT” —> Licencias, la mas utilizada es MIT, permite distribuir nuestro codigo.


6.
Dependencias

npm install moment

npm install eslint --save-dev —> dependencia que solo va a ser utilizada en el entorno de desarollo

npm install react --save —> dependencia para ser llevada a produccion.

Paquetes Globales

npm install -g
Ver lista de los paquetes

npm list
Ver lista de paquetes globlales

npm list -g

7.
npm install package-name -o → Instalar una dependencia opcional
Se pueden generar conflictos cuando se tienen paquetes que usan la misma dependencia pero en versiones diferentes. Para evitar esto se puede simular una instalación con npm install package-name —dry-run. Con esto se simula la instalación pero sin agregar ningún paquete, si no hay ningún conflicto se procede a instalar de la manera convencional.
npm install package-name@0.15.0 → Instalar la versión especifica de un paquete. Si luego se quiere instalar la versión más reciente se usa npm install package-name@latest.
npm install → Instala las dependencias que estén dentro de un package.json.

8.
